name: Auto-Format SQL with Poor Man’s T-SQL Formatter

on:
  push:  
  pull_request:  

jobs:
  format-sql:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: 🛠 Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 🛠 Install Poor Man’s T-SQL Formatter CLI
        run: npm install -g poor-mans-t-sql-formatter-cli

      - name: 🔄 Format only changed SQL files
        run: |
          # Find changed SQL files in the last commit
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD -- '*.sql' '*.SQL')

          if [[ -z "$CHANGED_FILES" ]]; then
            echo "⚠️ No changed SQL files found. Skipping formatting."
            exit 0
          fi

          echo "📂 Changed SQL files detected:"
          echo "$CHANGED_FILES"

          for file in $CHANGED_FILES; do
            echo "⚡ Formatting $file..."
            sqlformat --inputFile "$file" --outputFile "$file" --statementBreaks 1
          done

      - name: 🚀 Commit formatted SQL files
        run: |
          # Check if there are modified files
          CHANGED_FILES=$(git diff --name-only -- '*.sql' '*.SQL')

          if [[ -z "$CHANGED_FILES" ]]; then
            echo "⚠️ No formatting changes detected. Skipping commit."
            exit 0
          fi

          echo "🔄 Adding formatted SQL files..."
          echo "$CHANGED_FILES"

          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # Use a loop to add each file separately (to avoid issues)
          for file in $CHANGED_FILES; do
            git add "$file"
          done

          git commit -m "🔄 Auto-formatted SQL files" || echo "⚠️ No changes to commit"
          git push || echo "⚠️ No changes to push"